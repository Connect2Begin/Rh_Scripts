--[[ LuaEUM ]]--

----------------------------------------
--[[ description:
  -- Subtitles: correction.
  -- Субтитры: корректирование.
--]]
--------------------------------------------------------------------------------

----------------------------------------
--local context = context
local logShow = context.ShowInfo

local tables = require 'context.utils.useTables'

--------------------------------------------------------------------------------

----------------------------------------
local subs = require "Rh_Scripts.LuaUM.scripts.Subtitles"

---------------------------------------- Locale
local L = subs.Locale

do
  --local t = {}
  local format = string.format

--logShow(L, "Localize", nil, { pairs = tables.allpairs })
for k, v in tables.allpairs(L) do
  --t[#t+1] = "name = "..k
  --t[#t+1] = "value = "..(type(v) == 'string' and v or tostring(v))

  --if k:find('cap_', 1, true) then logShow({ name, v, k }, "cap") end
  local name = type(k) == 'string' and k:match("^cap%_(.*)$")
  if name then
    local h = L["hot_"..name]
    --logShow({ name, v, h }, "cap+hot")
    L["itm_"..name] = h and type(v) == 'string' and
                      format("&%s - %s", h, v) or v
  end
end
--logShow(t, "allpairs")
--logShow(L, "Extended Localize")

end -- do

---------------------------------------- Separator
local mSeparator = {
  separator = true,
} ---

---------------------------------------- Current clause
local mCurrentClause = {
  text = L.CurrentClause,
  Items = {
    { text = L.itm_CurClauseLen,
      Function = subs.CurClauseLen, },
    { text = L.itm_CurClauseGap,
      Function = subs.CurClauseGap, },
    --mSeparator,
  } ---
} --- mCurrentClause

---------------------------------------- Items/Menu
local mSubtitles = {
  text = L.Subtitles,
  Items = {
    mCurrentClause,
    mSeparator,
    { text = L.itm_SubtitleType,
      Function = subs.SubtitleType, },
    { text = L.itm_CurClauseData,
      Function = subs.CurClauseData, },
  } -- Items
} --- mSubtitles

---------------------------------------- Data
local Data = {
  Menu = {
    text = L.Subtitles,
    Items = { mSubtitles, },
  },
  ["Subtitles"] = mSubtitles,
} ---

return Data
--------------------------------------------------------------------------------
