--[[ TT: source ]]--

----------------------------------------
--[[ description:
  -- Templates for 'source'
     (Source language code).
  -- Шаблоны для 'source'.
--]]
--------------------------------------------------------------------------------

---------------------------------------- Keywords Key
local KeywordsKey = {
  -- Key keywords:
  a = 'array',
  b = 'begin',
  c = 'case',
  d = 'default',
  e = 'end',
  f = 'function',
  g = 'integer',
  h = 'thread',
  i = 'interface',
  j = 'break',
  k = 'local',
  l = 'boolean',
  --m = '',
  n = 'number',
  o = 'bool',
  p = 'procedure',
  q = 'continue',
  r = 'return',
  s = 'string',
  t = 'table',
  u = 'unit',
  v = 'value',
  w = 'while',
  x = 'class',
  y = 'object',
  z = 'result',

  -- Key variables:
  C = 'Count',
  D = 'Default',
  E = 'Error',
  J = 'Index',
  R = 'Result',
  V = 'Value',
} --- KeywordsKey

local function KeywordKey (Cfg)
  local s = Cfg.Template.Result
  local sn = s:match("`(%w-)$")

  s = KeywordsKey[sn]
  if s then return s end

  return false
end -- KeywordKey

---------------------------------------- Keywords Add
local KeywordsAdd = {
  -- Additonal keywords:
  a = 'abstract',
  b = 'object',
  c = 'switch',
  d = 'dynamic',
  e = 'error',
  f = 'false',
  g = 'float',
  h = 'inherited',
  i = 'implementation',
  j = 'include',
  k = 'require',
  l = 'overload',
  m = 'message',
  n = 'extended',
  o = 'override',
  p = 'pointer',
  q = 'format',
  r = 'repeat',
  s = 'strict',
  t = 'true',
  u = 'until',
  v = 'virtual',
  w = 'with',
  --x = '',
  y = 'property',
  --z = '',

  -- Additional (key)words:
  --F = 'for @Here do@Back',
  X = 'except',
  Y = 'finally',
  W = 'when',
  Z = 'then',
} --- KeywordsAdd

local function KeywordAdd (Cfg)
  local s = Cfg.Template.Result
  local sn = s:match("``(%w-)$")

  s = KeywordsAdd[sn]
  if s then return s end

  return false
end -- KeywordAdd

---------------------------------------- Keywords @
local KeywordsAt = {
  -- @ keywords:
  a = 'author',
  b = 'debug',
  c = 'class',
  d = 'default',
  --e = '',
  f = 'field',
  --g = '',
  --h = '',
  i = 'info',
  --j = '',
  k = 'local',
  l = 'locals',
  m = 'meta',
  n = 'notes',
  --o = '',
  p = 'param',
  q = 'params',
  r = 'return',
  s = 'see',
  t = 'test',
  u = 'usage',
  v = 'version',
  --w = '',
  --x = '',
  --y = '',
  z = 'release',

  -- @ (key)words:
  C = 'copyright',
  D = 'description',
  --F = '',
  N = 'name',
} --- KeywordsAt

local function KeywordAt (Cfg)
  local s = Cfg.Template.Result
  local sn = s:match("@`(%w-)$")

  s = KeywordsAt[sn]
  if s then return '@'..s end

  return false
end -- KeywordAt

--------------------------------------------------------------------------------

---------------------------------------- Data
local Data = {
  --[[DO]]--

  regex  = "lua";

  --[[Templates]]-- Шаблоны:

  -- Keywords:
  { find = "`%w",   apply = KeywordKey, as = "plain" },
  { find = "``%w",  apply = KeywordAdd, as = "plain" },
  { find = "@`%w",  apply = KeywordAt,  as = "plain" },
} --- Data

return Data
--------------------------------------------------------------------------------
